Tested with java-21, maven 3.9

Look into all instances of @SuppressWarnings
Refactor Preference to not have a variable of all possible types, with only 1 being non-null

Clean up MainShell
Look instal usages of instanceof

Deal with SWT dependecies:
    Download relevent file from https://download.eclipse.org/eclipse/downloads/drops4/R-4.30-202312010110/
    Then, something along the lines of:
    export JAVA_HOME=/usr/lib/jvm/java-1.21.0-openjdk-amd64
    mvn39 install:install-file -Dfile=swt.jar -DgroupId="org.eclipse.swt" -DartifactId="org.eclipse.swt.gtk.linux.x86_64" -Dversion="4.30.0" -Dpackaging="jar"


Consider prefetch and caching for videos
look into generic catch statements
String Parsing stuff
organize CommonFunctions

Test ondisk rescaling (ImageManager.scaleImageOnDisk())
many model elements have a lot of the same fields (including in XML). Possible room for deduplication

User-visible reporting of XML parse errors
Proper validation or structure aware parsing of guide XML
Make Jscript not use so much static
    I think the reason for all the static was to assist in binding functions, as trying to bind a non-static method is tricky
    I think the trick here is to bind the wrapping object, then use javascript to lift the relevent method into the global scope
Improve Javascript debugability
    How to bring up debug window?
    When an error occurs on something like a button press, provide better context

Possible bug when enabling multi-monitor support. No image displays until you manually clear startup.state
Also, the entire *.state system seems to be ripe with inconsistent state during updates

Make the debug and JS debug toggles immidietly toggle the relevent debug window
    Currently the JS window will show up when the page changes, and the normal debug window requires an alt-d to appear
    Also, the normal debug window needs some love
In the main tab of the debug window, the last column stretches all the way to the edge of the window
Changing monitor settings leaks a debug shell. (E.G, with a debug shell visible, change monitor settings, then try toggling the debug shell)

Factor out the pattern:
    			mainShell.comonFunctions.setFlags(objTimer.getSet(), mainShell.guide.getFlags());
				mainShell.comonFunctions.unsetFlags(objTimer.getUnSet(),
						mainShell.guide.getFlags());

Introduce type safety around the cooked/uncooked distinction
